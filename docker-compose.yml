services:
  web:
    build: .
    ports:
      - "8000:80"
    volumes:
      - .:/code
      - /code/.venv
      - ./uploads:/code/uploads
    environment:
      - PYTHONPATH=/code
      - ENVIRONMENT=development
      - DRAMATIQ_BROKER_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:80/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  dramatiq-worker:
    build: .
    command: dramatiq src.shared.infrastructure.dramatiq_app --processes 2 --threads 1
    volumes:
      - .:/code
      - /code/.venv
    environment:
      - PYTHONPATH=/code
      - ENVIRONMENT=development
      - DRAMATIQ_BROKER_URL=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-f", "dramatiq"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "5442:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6399:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Optional: Database admin interface
  adminer:
    image: adminer
    ports:
      - "8089:8080"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  db_data:
  redis_data:
