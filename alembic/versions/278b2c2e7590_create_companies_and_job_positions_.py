"""create_companies_and_job_positions_tables

Revision ID: 278b2c2e7590
Revises: 45b5b18505bb
Create Date: 2025-09-23 18:55:13.725106

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '278b2c2e7590'
down_revision: Union[str, Sequence[str], None] = '45b5b18505bb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('culture', sa.JSON(), nullable=True),
    sa.Column('external_data', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'ACTIVE', 'INACTIVE', name='companystatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_companies_id'), 'companies', ['id'], unique=False)
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=False)
    op.create_table('job_positions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('company_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('work_location_type', sa.Enum('REMOTE', 'ON_SITE', 'HYBRID', name='worklocationtype'), nullable=False),
    sa.Column('salary_range', sa.JSON(), nullable=True),
    sa.Column('contract_type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', 'FREELANCE', 'INTERNSHIP', 'TEMPORARY', name='contracttype'), nullable=False),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('job_category', postgresql.ENUM('TECHNOLOGY', 'OPERATIONS', 'SALES', 'MARKETING', 'ADMINISTRATION', 'HR', 'FINANCE', 'CUSTOMER_SERVICE', 'OTHER', name='jobcategory', create_type=False), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'REJECTED', 'OPEN', 'CLOSED', 'PAUSED', name='jobpositionstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_positions_company_id'), 'job_positions', ['company_id'], unique=False)
    op.create_index(op.f('ix_job_positions_id'), 'job_positions', ['id'], unique=False)
    op.create_index(op.f('ix_job_positions_title'), 'job_positions', ['title'], unique=False)
    op.drop_index('idx_interview_sessions_started_at', table_name='interview_sessions')
    op.drop_index('idx_interview_sessions_status', table_name='interview_sessions')
    op.drop_index('idx_interview_sessions_template_id', table_name='interview_sessions')
    op.drop_index('idx_interview_sessions_user_id', table_name='interview_sessions')
    op.drop_index('idx_interview_sessions_user_status', table_name='interview_sessions')
    op.drop_table('interview_sessions')
    op.add_column('interview_templates', sa.Column('template_metadata', sa.JSON(), nullable=True))
    op.drop_index('idx_is_current_version', table_name='interview_templates')
    op.drop_index('idx_version', table_name='interview_templates')
    op.create_index(op.f('ix_interview_templates_created_by'), 'interview_templates', ['created_by'], unique=False)
    op.create_index(op.f('ix_interview_templates_is_current_version'), 'interview_templates', ['is_current_version'], unique=False)
    op.create_index(op.f('ix_interview_templates_parent_template_id'), 'interview_templates', ['parent_template_id'], unique=False)
    op.create_index(op.f('ix_interview_templates_version'), 'interview_templates', ['version'], unique=False)
    op.drop_column('interview_templates', 'metadata')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('interview_templates', sa.Column('metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_interview_templates_version'), table_name='interview_templates')
    op.drop_index(op.f('ix_interview_templates_parent_template_id'), table_name='interview_templates')
    op.drop_index(op.f('ix_interview_templates_is_current_version'), table_name='interview_templates')
    op.drop_index(op.f('ix_interview_templates_created_by'), table_name='interview_templates')
    op.create_index('idx_version', 'interview_templates', ['version'], unique=False)
    op.create_index('idx_is_current_version', 'interview_templates', ['is_current_version'], unique=False)
    op.drop_column('interview_templates', 'template_metadata')
    op.create_table('interview_sessions',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('interview_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('current_phase', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('template_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('questions_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('responses_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('progress_percentage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('estimated_completion_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='interview_sessions_pkey')
    )
    op.create_index('idx_interview_sessions_user_status', 'interview_sessions', ['user_id', 'status'], unique=False)
    op.create_index('idx_interview_sessions_user_id', 'interview_sessions', ['user_id'], unique=False)
    op.create_index('idx_interview_sessions_template_id', 'interview_sessions', ['template_id'], unique=False)
    op.create_index('idx_interview_sessions_status', 'interview_sessions', ['status'], unique=False)
    op.create_index('idx_interview_sessions_started_at', 'interview_sessions', ['started_at'], unique=False)
    op.drop_index(op.f('ix_job_positions_title'), table_name='job_positions')
    op.drop_index(op.f('ix_job_positions_id'), table_name='job_positions')
    op.drop_index(op.f('ix_job_positions_company_id'), table_name='job_positions')
    op.drop_table('job_positions')
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.drop_index(op.f('ix_companies_id'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
