"""

Revision ID: 1041d31a8631
Revises: 278b2c2e7590
Create Date: 2025-09-26 15:01:17.570413

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1041d31a8631'
down_revision: Union[str, Sequence[str], None] = '278b2c2e7590'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the new enum type
    scope_enum = postgresql.ENUM('GLOBAL', 'ITEM', name='interviewtemplatequestionscope')
    scope_enum.create(op.get_bind())

    # Add the new column
    op.add_column('interview_template_questions', sa.Column('scope', scope_enum, nullable=True))

    # Drop the old column and its enum type
    op.drop_column('interview_template_questions', 'section')
    op.execute("DROP TYPE IF EXISTS interviewtemplatequestionsection")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the old enum type
    section_enum = postgresql.ENUM('GENERAL', 'EXPERIENCE', 'EDUCATION', 'PROJECTS', 'SOFT_SKILLS', name='interviewtemplatequestionsection')
    section_enum.create(op.get_bind())

    # Add the old column
    op.add_column('interview_template_questions', sa.Column('section', section_enum, autoincrement=False, nullable=True))

    # Drop the new column and its enum type
    op.drop_column('interview_template_questions', 'scope')
    op.execute("DROP TYPE IF EXISTS interviewtemplatequestionscope")
    # ### end Alembic commands ###
